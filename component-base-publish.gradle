apply plugin: 'maven-publish'

def isReleaseBuild() {
    return !getAarVersionName().toUpperCase().contains("SNAPSHOT")
}

def isAndroidLib() {
    return getPlugins().hasPlugin("com.android.library")
}

// 先读取jenkins配置的参数，然后在读本地的配置
def getAarVersionName() {
    return System.getenv()['AAR_VERSION_NAME'] as String ?: VERSION_NAME
}

// 先读取jenkins配置的参数，然后在读本地电脑的配置
def getRepositoryUsername() {
    return System.getenv()['NEXUS_USERNAME'] as String ?: (hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : "")
}

// 先读取jenkins配置的参数，然后在读本地电脑的配置
def getRepositoryPassword() {
    return System.getenv()['NEXUS_PASSWORD'] as String ?: (hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : "")
}

// 先读取项目配置的参数，没有的话就用默认的
def getReleaseRepositoryUrl() {
    return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL : default_release_repository_url
}

// 先读取项目配置的参数，没有的话就用默认的
def getSnapShotRepositoryUrl() {
    return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL : default_snapshot_repository_url
}

ext {
    default_snapshot_repository_url = 'http://nexus.vesync.com:9081/repository/app-snapshots/'
    default_release_repository_url = "http://nexus.vesync.com:9081/repository/app-releases/"
}

afterEvaluate {
    publishing {
        publications {
            maven(MavenPublication) {
                groupId GROUP
                artifactId POM_ARTIFACT_ID
                version getAarVersionName()

                if (isAndroidLib() && isReleaseBuild()) {
                    from components.release
                } else if (isAndroidLib() && !isReleaseBuild()) {
                    from components.debug
                } else {
                    from components.java
                }
            }
        }
        repositories {
            maven {
                // 允许使用明文地址http
                allowInsecureProtocol = true
                name = "nexus"
                if (isReleaseBuild()) {
                    url = getReleaseRepositoryUrl()
                } else {
                    url = getSnapShotRepositoryUrl()
                }
                credentials {
                    username = getRepositoryUsername()
                    password = getRepositoryPassword()
                }
            }
        }
    }
}
